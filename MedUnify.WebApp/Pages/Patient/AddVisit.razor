@page "/addVisit"

@attribute [Route("/")]
@inject HttpClient Http

<PageTitle>Add Visit</PageTitle>

<div class="row g-3">
    <div class="col-md-6">
        <select class="form-select" value="@selectedPatientId" @onchange="OnPatientSelectionChanged">
            <option value="0">Select Patient</option>
            @foreach (var patient in patients)
            {
                <option value="@patient.Id">@patient.FirstName</option>
            }
        </select>
    </div>
    @if (selectedPatientId != 0)
    {
        <div class="col-md-2">
            <button class="btn btn-light" @onclick='()=>OpenDialog(selectedPatientId,"test")'>
                Add Progress Note
            </button>
        </div>
        @if (visits != null && visits.Any())
        {
            <h3>Visit Details</h3>

            foreach (var visit in visits)
            {
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <p>Visit ID: @visit.Id</p>
                            <p>Patient ID: @selectedPatientId</p>
                            <p>Visit Date: @visit.VisitDate.ToShortDateString()</p>

                            <h5>Progress Notes</h5>
                            @if (visit.ProgressNotes != null && visit.ProgressNotes.Any())
                            {

                                <table class="table table-borderless col-md-6">
                                    <thead>
                                        <tr>
                                            <th scope="col">Section Name</th>
                                            <th scope="col">Section Text</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var note in visit.ProgressNotes)
                                        {
                                        <tr>
                                                <td>@note.SectionName</td>
                                                <td> @note.SectionText</td>
                                        </tr>
                                        }
                                        </tbody>
                                </table>
                            }
                          
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="mt-3">@displayMsg</p>
        }
    }

</div>
@if (dialogIsOpen)
{
    <AddProgressNotePopup OnClose="@OnDialogClose" PatientId="@selectedPatientId" OnClickCallback="@RefreshList"></AddProgressNotePopup>
}

@code {
    private int selectedPatientId;
    private List<PatientModel>? patients = new List<PatientModel>();
    private List<PatientVisitModel>? visits;
    private bool dialogIsOpen = false;
    private string displayMsg = "";

    protected override async Task OnInitializedAsync()
    {
        patients = await LoadPatients();
    }

    private async Task<List<PatientModel>?> LoadPatients()
    {
        patients = await Http.GetFromJsonAsync<List<PatientModel>>("https://localhost:7228/api/Patient");
        return patients;
    }
    private async Task LoadVisits()
    {
        visits = await Http.GetFromJsonAsync<List<PatientVisitModel>>("https://localhost:7228/api/PatientVisit?patientId=" + selectedPatientId);
       
    }
    private void OpenDialog(int id, string title)
    {
        dialogIsOpen = true;
    }
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            await Task.CompletedTask;
        }
        dialogIsOpen = false;
    }

    private async Task RefreshList()
    {
        await LoadVisits();
        StateHasChanged();
    }

    private async Task OnPatientSelectionChanged(ChangeEventArgs e)
    {
        
        displayMsg = "Loading....";
        selectedPatientId = Convert.ToInt32(e.Value);
        await LoadVisits();
        if (visits==null || visits.Count==0)
        {
            displayMsg = "No data available for selected patient!!";
        }
      
        StateHasChanged();
    }
    private void OpenAddProgressNotePopup()
    {
        // Implement the logic to open the add progress note popup
    }
}
